#include <iostream>
#include <functional>

#include "../MidiFile.h"

class Play
{
public:
   Play()
   {
      mf = new MidiFile();
   }

   ~Play()
   {
      delete mf;
   }

   void play(const char *fln)
   {
      unsigned int time = 0;
      int notectr = 0;
      ParserResult r = 
      mf->parse(fln, [this, &notectr, &time](unsigned int delta, unsigned char type, unsigned char note, unsigned char velo)
      {
         printf("---> note ooo %ld, %x, %d, %d\r\n", delta, type, note, velo);
         notectr++;
       
         unsigned int delta_ms = mf->delta_to_ms(delta);
         printf("---> dms %d\r\n", delta_ms);
         if (delta_ms > 0)
         {
            //rtos::ThisThread::sleep_for(delta_ms); // time in ms
            time += delta_ms;
         }
      });
      if (r == parser_ok)
      {
         printf("parser ok\r\n");
      }
      else
      {
         printf("parser error\r\n");
      }
      printf("total time %d \r\n", time);
   }

private:
   MidiFile *mf;
};

const bool MidiFile::debug = true;  

int main(int argc, char **argv)
{
   std::cout << "testmidi\n";
   
   Play *pl = new Play();
   pl->play(argv[1]);

   delete pl;
}
